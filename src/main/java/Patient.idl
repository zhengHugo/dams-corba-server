module appointment {
  enum AppointmentType {
     Physician,
     Surgeon,
     Dental
  };

  struct Appointment {
    string id;
    long capacity;
    sequence<string> patientIds;
    AppointmentType type;
  };

  struct AppointmentAvailability {
    string appointmentId;
    long availability;
  };
};

module patient {
  interface Patient {
    boolean bookAppointment(
        in string patientId,
        in appointment::AppointmentType type,
        in string appointmentId
    );

    string getAppointmentSchedule(in string patientId);

    boolean cancelAppointment(
        in string patientId,
        in appointment::AppointmentType type,
        in string appointmentId
    );

    boolean swapAppointment(
        in string patientId,
        in appointment::AppointmentType oldType,
        in string oldAppointmentId,
        in appointment::AppointmentType newType,
        in string newAppointmentId
    );
  };
};

module admin {
  interface Admin {
    boolean addAppointment(
        in string appointmentId,
        in appointment::AppointmentType type,
        in long capacity
    );

    string removeAppointment(
        in string appointmentId,
        in appointment::AppointmentType type
    );

    string listAppointmentAvailability(
        in appointment::AppointmentType type
    );
  };
};


